#include <stdio.h>


typedef long long int Money;


struct Mortgage
{
    double rate;
    Money credit;
    Money pay;
    Money month_pay;
};


int month = 0;
int year = 2024;


struct Bank
{
    Money vklad;
    Money month_pay;
    Money deposit;
};


struct Individual
{
    Money zarplata;
    Money rashod;
    Money status;
    Money kvartira;
    Money rubles; 
    struct Mortgage mortgage;
    struct Bank bank;
};


struct Individual Alice;
struct Individual Bob;  


void Alice_money()
{
    Alice.status = 1;
    Alice.zarplata = 210 * 1000;
    Alice.rashod = 50 * 1000;
 
    Alice.mortgage.rate = 0.18;
    Alice.mortgage.credit = 13 * 1000 * 1000;
    Alice.mortgage.month_pay = 160 * 1000;
    Alice.bank.vklad = 0;
    Alice.kvartira = 14 * 1000 * 1000;
    Alice.bank.deposit = 20;
};


void Bob_money()
{
    Bob.status = 0;
    Bob.zarplata = 210 * 1000;
    Bob.rashod = 50 * 1000;
    Bob.kvartira = 30 * 1000; 
    Bob.bank.vklad = 1000 * 1000;
    Bob.bank.deposit = 20;
};


void Alice_zarplata(const int month)
{
    if(month == 12) {
        Alice.status += Alice.zarplata;
    };
    if(month == 1) {
        Alice.zarplata *= 1.10;
    };
    Alice.status += Alice.zarplata;

};


void Alice_rashod(const int month)
{
    if (month == 1){
        Alice.rashod *= 1.10;
    }
    Alice.status -= Alice.rashod;
};


void Alice_kvartira(const int month)
{
    if (month == 1)
    {
        Alice.kvartira *= 1.10;
    }
};


void Bob_zarplata(const int month)
{
    if(month == 12) {
        Bob.status += Bob.zarplata;
    }
    if(month == 1) {
        Bob.zarplata *= 1.10;
    }
    Bob.status += Bob.zarplata;
};


void Bob_rashod(const int month)
{
    if (month == 1)
    {
        Bob.rashod *= 1.10;
    }
    Bob.status -= Bob.rashod;
};


void Alice_mortgage()
{
     if (Alice.mortgage.credit >= 0); {
        Alice.status -= Alice.mortgage.month_pay;
        Alice.mortgage.credit -= Alice.mortgage.month_pay;
     }
};


void Bob_bank(const int month, const int year)
{
    Bob.bank.month_pay = Bob.zarplata - Bob.rashod - Bob.kvartira;
    Bob.status -= Bob.bank.month_pay;
    Bob.bank.vklad = ((Bob.bank.deposit/12)*0.01+1) * (Bob.bank.vklad + Bob.bank.month_pay); 
    Bob.status += (Bob.bank.vklad - Bob.bank.month_pay);
};


void Alice_bank(const int month, const int year)
{
    if (Alice.mortgage.credit <= 0) 
     { 
        Alice.bank.month_pay = Alice.zarplata - Alice.rashod;
        Alice.status -= Alice.bank.month_pay;
        Alice.bank.vklad = ((Alice.bank.deposit/12)*0.01+1) * (Alice.bank.vklad + Alice.bank.month_pay); 
        Alice.status += (Alice.bank.vklad - Alice.bank.month_pay);
    }
};


void Bob_kvartira(int year)
{
    if (year == 2034 || year == 2044 || year == 2054) {
        Bob.kvartira += 7000;
    }
    Bob.status - Bob.kvartira;
};


void total_Alice()
{
    Alice.status += Alice.kvartira; 
    if (Alice.status > Bob.status) {
        printf ("Alice has more money than Bob on %lld\n", Alice.status - Bob.status);
    }

    if (Alice.status < Bob.status) {
        printf ("Bob has more money than Alice on %lld\n", Bob.status - Alice.status);
    }

    printf ("Alice capital = %lld \n", Alice.status);
};


void total_Bob()
{
    printf ("Bob capital = %lld \n", Bob.status);

};


void simulation()
{

    while (year != 2054 && month != 9) {
        Alice_zarplata(month);
        Alice_rashod(month);
        Alice_mortgage(month);
        Alice_kvartira(month);
        Alice_bank(month,year);

        Bob_zarplata(month);
        Bob_kvartira(year);
        Bob_rashod(month);
        Bob_bank(month,year);

        month++;
        if(month == 13) {
            month = 1;
            year++;
        };
        
    };  
           
};


int main()
{
    Alice_money();

    Bob_money();

    simulation();

    total_Alice();
    
    total_Bob();
    return 0;
};



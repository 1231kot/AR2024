#include <stdio.h>
#include <stdlib.h>

typedef long long int Money;

// 定义银行结构体
struct Bank {
    double interestRate;
    Money deposit;
};

// 定义人结构体
struct Person {
    Money income;
    Money savings;
    struct Bank bank;
};

// 人进行存款操作
void personDeposit(struct Person *person, Money amount) {
    // 检查存款金额合法性
    if (amount < 0) {
        printf("Invalid deposit amount.\n");
        return;
    }

    person->savings += amount;
    person->bank.deposit += amount;

    // 计算利息并更新存款
    if (person->bank.interestRate < 0) {
        printf("Invalid interest rate.\n");
        return;
    }
    person->savings += person->savings * person->bank.interestRate;
}

// 初始化人的财务状况和银行
void initPersonAndBank(struct Person *person, Money income, double interestRate) {
    // 检查收入和利率合法性
    if (income < 0) {
        printf("Invalid income.\n");
        return;
    }
    if (interestRate < 0 || interestRate > 1) {
        printf("Invalid interest rate.\n");
        return;
    }

    person->income = income;
    person->savings = 0;
    person->bank.interestRate = interestRate;
    person->bank.deposit = 0;
}

// 打印人的财务状况和银行信息
void printPersonAndBank(struct Person person) {
    printf("Income: %lld\n", person.income);
    printf("Savings: %lld\n", person.savings);
    printf("Bank Interest Rate: %.2f\n", person.bank.interestRate);
    printf("Bank Deposit: %lld\n", person.bank.deposit);
    printf("\n");
}

int main() {
    struct Person alice;
    initPersonAndBank(&alice, 5000, 0.03);

    // 模拟几个月的财务状况变化
    for (int month = 1; month <= 6; month++) {
        // 每月收入存入银行
        personDeposit(&alice, alice.income);
        printf("Month %d:\n", month);
        printPersonAndBank(alice);
    }

    return 0;
}
